steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      echo "$BRANCH_NAME"

# - id: 'install checkov'
#   name: 'python:3.9'
#   entrypoint: 'bash'
#   args:
#     - '-c'
#     - |
#       pip install --upgrade pip
#       pip install checkov
#       checkov --version
#       cd modules/
#       checkov -d . --skip-check CKV_GCP_113,CKV_GCP_60,CKV_GCP_14,CKV2_GCP_20,CKV_GCP_6,CKV_GCP_79 --output json --output-file checkov_report.json --quiet || (echo "Checkov scan failed!" && exit 1)

- id: 'tf init'
  name: "hashicorp/terraform:1.3.0"
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      cd workspace/services
      terraform init -reconfigure

- id: 'tf plan'
  name: "hashicorp/terraform:1.3.0"
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      cd workspace/services
      terraform plan -var="project_id=$_PROJECT_ID"

- id: 'tf apply or destroy'
  name: "hashicorp/terraform:1.3.0"
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      cd workspace/services
      terraform $_TFACTION -auto-approve -var="project_id=$_PROJECT_ID"

#timeout = 6100s
logsBucket: 'cloud-build-logs-aaaa' # this is created manually and granted access on service account
options:
  logging: GCS_ONLY
